services:
  db:
    image: postgres:14-bullseye
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  migrations:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    command: >
      sh -c "
        npx prisma migrate deploy &&
        redis-cli -h redis flushall &&
        npx tsx server/tools/init-chains.ts &&
        npx prisma migrate dev
      "
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    depends_on:
      - migrations
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
      SERVER_PORT: "3000"
      PUBLIC_URL: ${PUBLIC_URL}
    volumes:
      - uploads_data:/app/uploads

  indexer:
    build:
      context: .
      dockerfile: Dockerfile.indexer
    ports:
      - "3001:3001"
    depends_on:
      - migrations
      - redis
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
      INDEXER_PORT: "3001"
    volumes:
      - uploads_data:/app/uploads

volumes:
  postgres_data_dev:
  uploads_data: